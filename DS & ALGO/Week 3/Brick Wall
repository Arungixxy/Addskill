class Solution {
    public int leastBricks(List<List<Integer>> wall) {
        
        Map<Integer,Integer> blocks = new HashMap<>();
        
        for(int i=0; i < wall.size(); i++){
            fillWalls(blocks,wall.get(i));
        }
        
        int max = Integer.MIN_VALUE;
        
        for(Map.Entry<Integer,Integer> entry : blocks.entrySet()){
                  
            if(entry.getValue() > max){
                max = entry.getValue();
            }
        }
        
        return wall.size() - max;
        
    }
    
    public void fillWalls(Map<Integer,Integer> blocks, List<Integer> part){
        
        int prev = 0;
        int block = 0;
        int sum = 0;
        
        for(int i = 0; i < part.size() ; i++){
            block = part.get(i);
            sum += block;
            if(blocks.containsKey(block + prev)){
                blocks.put(block+prev, blocks.get(block+prev) +1);
            }else{
                blocks.put(block+prev, 1);
            }
            
            prev += part.get(i);
        }
        
         blocks.put(sum, 0);
        
    }
}
