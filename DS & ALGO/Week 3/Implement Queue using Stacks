class MyQueue {

    static Stack<Integer> s1;
    static Stack<Integer> s2;
    static int curr_size;
    public MyQueue() {
        s1 = new Stack<Integer>();  
        s2 = new Stack<Integer>();  
        curr_size=0;
    }
    
    /** Push element x to the back of queue. */
    public void push(int x) {
        while(!s1.isEmpty())
            s2.push(s1.pop());
        curr_size++;
        s1.push(x);
        while(!s2.isEmpty())
            s1.push(s2.pop());
    }
    
    /** Removes the element from in front of queue and returns that element. */
    public int pop() {
        if(s1.isEmpty()){
            return -1;
        }
        int x=s1.peek();
        curr_size--;
        s1.pop();
        return x;
    }
    
    /** Get the front element. */
    public int peek() {
        if(!s1.isEmpty())
            return s1.peek();
        else return -1;
    }
    
    /** Returns whether the queue is empty. */
    public boolean empty() {
        return curr_size==0;
    }
}
